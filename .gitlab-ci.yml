# This GitLab CI file is based on the C++.gitlab-ci.yml template.

# use the official gcc image, based on debian
# can use versions as well, like gcc:5.2
# see https://hub.docker.com/_/gcc/
image: gcc

variables:
  BUILD_TYPE: "Release"
  CMAKE_GENERATOR: "Ninja"

.rules:
  rules:
    - if: $NO_EXCEPTIONS_MATRIX_VAR =~ /no-exceptions-false/
      variables:
        NO_EXCEPTIONS: "false"
        BUILD_DIR: "build-no-exceptions-false"
    - if: $NO_EXCEPTIONS_MATRIX_VAR =~ /no-exceptions-true/
      variables:
        NO_EXCEPTIONS: "true"
        BUILD_DIR: "build-no-exceptions-true"

.parallel:
  parallel:
    matrix:
      # Job names are generated by the YAML values in matrix builds.
      # So instead of just [false, true], we need to specify explicit
      # names and then test for those in our rules and set the actual
      # variable.
      - NO_EXCEPTIONS_MATRIX_VAR: [no-exceptions-false, no-exceptions-true]

build:
  stage: build
  # instead of calling g++ directly you can also use some build toolkit like make
  # install the necessary build tools when needed
  before_script:
    # Install prerequisites
    - apt update -y
    - apt install -y autoconf cmake doctest-dev doxygen google-mock googletest libsdl2-dev libspdlog-dev make ninja-build pkg-config
  # before_script:
  #   - apt update && apt -y install make autoconf
  rules: !reference [.rules, rules]
  script:
    - mkdir $BUILD_DIR
    - cmake -G $CMAKE_GENERATOR -DCMAKE_CXX_COMPILER=g++ -DCMAKE_C_COMPILER=gcc -DCMAKE_BUILD_TYPE=$BUILD_TYPE -DNO_EXCEPTIONS=$NO_EXCEPTIONS -B $BUILD_DIR -S .
    - cmake --build $BUILD_DIR --config $BUILD_TYPE
  parallel: !reference [.parallel, parallel]
  artifacts:
    paths:
      - $BUILD_DIR
      # depending on your build setup it's most likely a good idea to
      # cache outputs to reduce the build time
      # cache:
      #   paths:
      #     - "*.o"

# run tests using the binary built before
test:
  stage: test
  needs:
    - job: build
      parallel: !reference [.parallel, parallel]
  parallel: !reference [.parallel, parallel]
  rules: !reference [.rules, rules]
  before_script:
    # Install prerequisites
    - apt update -y
    - apt install -y autoconf cmake doctest-dev doxygen google-mock googletest libsdl2-dev libspdlog-dev make ninja-build pkg-config
  script:
    - echo "Testing with NO_EXCEPTIONS set to $NO_EXCEPTIONS"
    - ctest --build-config $BUILD_TYPE --test-dir $BUILD_DIR/test

# deploy:
#   stage: deploy
#   script: echo "Define your deployment script!"
#   environment: production
